{"version":3,"sources":["components/TransactionsDisplay/Transaction/Transaction.css","App.css","components/RateInput/RateInput.css","components/UI/Input/Input.css","components/UI/Submit/Submit.css","components/NewTransaction/NewTransaction.css","components/TransactionsDisplay/TransactionsDisplay.css","components/LargestAmount/LargestAmount.css","components/Summary/Summary.css","serviceWorker.js","components/UI/Input/Input.js","components/RateInput/RateInput.js","store/actions/transactions.js","store/actions/actionTypes.js","components/NewTransaction/NameInput/NameInput.js","components/NewTransaction/AmountInput/AmountInput.js","components/UI/Submit/Submit.js","components/NewTransaction/NewTransaction.js","components/TransactionsDisplay/Transaction/Transaction.js","components/TransactionsDisplay/TransactionsDisplay.js","components/LargestAmount/LargestAmount.js","components/Summary/Summary.js","App.js","store/utility.js","store/reducers/transactions.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Input","props","className","classes","placeholder","maxLength","type","onChange","changed","RateInput","state","valid","rateHandler","ev","rate","target","value","onRate","onRecalc","validationCheck","includes","setState","message","this","style","fontSize","color","onBlur","Component","connect","transactions","dispatch","actions","NameInput","name","AmountInput","Submit","onClick","clicked","NewTransaction","amount","nameHandler","amountHandler","addTransactionHandler","preventDefault","transaction","onAddIt","form","document","querySelectorAll","id","onSubmit","Transaction","TransDataTop","TransDetails","TransData","TransDataBtm","TransDataBtmAmount","Number","toLocaleString","maximumFractionDigits","pln","TransactionsDisplay","removeTransHandler","onRemove","map","tr","key","TransDisplayHeader","LargestAmount","sortedTrans","sort","a","b","largeTrans","length","LargestAmountHeader","Summary","numbOfTrans","totalEur","reduce","acc","cur","totalPln","App","Header","Transactions","updateObject","oldObject","updatedObject","initialState","addRate","action","addTransaction","newTransaction","toFixed","concat","removeTransaction","splice","recalcTransaction","updatedTransactions","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68df872f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Transaction\":\"Transaction__Transaction__3uqs0\",\"TransDetails\":\"Transaction__TransDetails__DpWKP\",\"TransDataTop\":\"Transaction__TransDataTop__41yT2\",\"TransDataBtm\":\"Transaction__TransDataBtm__3Y8mo\",\"TransDataBtmAmount\":\"Transaction__TransDataBtmAmount__2rUV2\",\"TransData\":\"Transaction__TransData__Cbnbf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"App__Header__3mO0c\",\"Transactions\":\"App__Transactions__3NkmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RateInput\":\"RateInput__RateInput__mYLU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Submit\":\"Submit__Submit__3yBQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewTransaction\":\"NewTransaction__NewTransaction__2SzV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransDisplayHeader\":\"TransactionsDisplay__TransDisplayHeader__2RI7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LargestAmountHeader\":\"LargestAmount__LargestAmountHeader__2TwYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Summary\":\"Summary__Summary__2vbQY\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\n\r\nimport classes from './Input.css'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                className={classes.Input}\r\n                placeholder={props.placeholder}\r\n                maxLength={props.maxLength}\r\n                type={props.type}\r\n                onChange={props.changed}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Input","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport classes from './RateInput.css'\r\nimport Input from '../UI/Input/Input'\r\nimport * as actions from '../../store/actions/index'\r\n\r\n\r\nclass RateInput extends Component {\r\n\r\n    state = {\r\n        valid: true\r\n    }\r\n\r\n    rateHandler = ev => {\r\n        const rate = ev.target.value\r\n        this.props.onRate(rate)\r\n        this.props.onRecalc(rate)\r\n    }\r\n\r\n    validationCheck = (ev) => {\r\n        const rate = ev.target.value\r\n        if ([...rate].includes(',')) {\r\n            this.setState({ valid: false })\r\n        } else {\r\n            this.setState({ valid: true })\r\n        }\r\n    }\r\n    render() {\r\n        let message = null\r\n        if (!this.state.valid) {\r\n            message = (\r\n                <span style={{ fontSize: '10px', color: 'red' }}>USE dot, not comma</span>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div className={classes.RateInput}>\r\n                <h3>Put your rate here:</h3>\r\n                <form onBlur={this.rateHandler} onChange={this.validationCheck}>\r\n                    <div >\r\n                        <Input\r\n                            placeholder='rate'\r\n                            // type='number'\r\n                            maxLength='6'\r\n                        />\r\n                    </div>\r\n                </form>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rate: state.rate,\r\n        transactions: state.transactions\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRate: (rate) => dispatch(actions.addRate(rate)),\r\n        onRecalc: (rate) => dispatch(actions.recalcTransaction(rate))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RateInput)","import * as actionTypes from './actionTypes'\r\n\r\nexport const addRate = (rate) => {\r\n    return {\r\n        type: actionTypes.ADD_RATE,\r\n        rate: rate\r\n    }\r\n}\r\n\r\nexport const addTransaction = (transaction) => {\r\n    return {\r\n        type: actionTypes.ADD_TRANSACTION,\r\n        transaction: transaction\r\n    }\r\n}\r\n\r\nexport const removeTransaction = (id) => {\r\n    return {\r\n        type: actionTypes.DEL_TRANSACTION,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const recalcTransaction = (rate) => {\r\n    return {\r\n        type: actionTypes.RECALC_TRANSACTION,\r\n        rate: rate\r\n    }\r\n}","export const ADD_TRANSACTION = 'ADD_TRANSACTION'\r\nexport const DEL_TRANSACTION = 'DEL_TRANSACTION'\r\nexport const RECALC_TRANSACTION = 'RECALC_TRANSACTION'\r\n\r\nexport const ADD_RATE = 'ADD_RATE'\r\n","import React, { Component } from 'react'\r\n\r\nimport Input from '../../UI/Input/Input'\r\nimport classes from './NameInput.css'\r\n\r\nclass NameInput extends Component {\r\n\r\n    state = {\r\n        name: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Input\r\n                    placeholder='name of transaction'\r\n                    style={classes.Input}\r\n                    changed={this.props.changed}\r\n                    maxLength='20'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default NameInput","import React from 'react'\r\n\r\nimport Input from '../../UI/Input/Input'\r\nimport classes from './AmountInput.css'\r\n\r\nconst AmountInput = (props) => (\r\n    <div>\r\n        <Input\r\n            style={classes.Input}\r\n            type={props.type}\r\n            value={props.value}\r\n            placeholder='amount'\r\n            changed={props.changed} />\r\n    </div>\r\n)\r\n\r\nexport default AmountInput","import React from 'react'\r\n\r\nimport classes from './Submit.css'\r\n\r\nconst Submit = (props) => (\r\n    <div>\r\n        <input\r\n            type='submit'\r\n            name='submit'\r\n            value={props.value}\r\n            onClick={props.clicked}\r\n            className={classes.Submit}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default Submit","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../store/actions/index'\r\nimport NameInput from './NameInput/NameInput'\r\nimport AmountInput from './AmountInput/AmountInput'\r\nimport Submit from '../UI/Submit/Submit'\r\nimport classes from './NewTransaction.css'\r\n\r\nclass NewTransaction extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        amount: 0,\r\n        valid: true\r\n    }\r\n\r\n    nameHandler = (ev) => {\r\n        this.setState({ name: ev.target.value })\r\n    }\r\n    amountHandler = (ev) => {\r\n        this.validationCheck(ev)\r\n        this.setState({ amount: ev.target.value })\r\n    }\r\n    addTransactionHandler = ev => {\r\n        ev.preventDefault()\r\n        const transaction = {\r\n            name: this.state.name,\r\n            amount: this.state.amount\r\n        }\r\n        this.props.onAddIt(transaction)\r\n        const form = document.querySelectorAll('#form input')\r\n        form[0].value = ''\r\n        form[1].value = ''\r\n    }\r\n    validationCheck = (ev) => {\r\n        const amount = ev.target.value\r\n        if ([...amount].includes(',')) {\r\n            this.setState({ valid: false })\r\n        } else {\r\n            this.setState({ valid: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let message = null\r\n        if (!this.state.valid) {\r\n            message = (\r\n                <span style={{ fontSize: '10px', color: 'red' }}>USE dot, not comma</span>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div className={classes.NewTransaction}>\r\n                <form id='form' onSubmit={this.addTransactionHandler}>\r\n                    <NameInput changed={this.nameHandler} />\r\n                    <AmountInput changed={this.amountHandler}\r\n                    />\r\n                    {message}\r\n                    <Submit value='Add it'\r\n                    />\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        transaction: state.transaction\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddIt: (transaction) => dispatch(actions.addTransaction(transaction))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTransaction)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport classes from './Transaction.css'\r\n\r\nconst Transaction = (props) => (\r\n    <div className={classes.Transaction} onClick={props.clicked}>\r\n        <div className={classes.TransDataTop}>\r\n            <div className={classes.TransDetails}>Name</div>\r\n            <div className={classes.TransData}>{props.name}</div>\r\n        </div>\r\n        <div className={classes.TransDataBtm}>\r\n            <div className={classes.TransDataBtmAmount}>\r\n                <div className={classes.TransDetails}>Amount EUR </div>\r\n                <div className={classes.TransData}>{Number(props.amount).toLocaleString('pl-PL', { maximumFractionDigits: 2 })}</div>\r\n            </div>\r\n            <div className={classes.TransDataBtmAmount}>\r\n                <div className={classes.TransDetails}>Amount PLN </div>\r\n                <div className={classes.TransData}>{Number(props.pln).toLocaleString('pl-PL', { maximumFractionDigits: 2 })}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        transaction: state.transaction\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Transaction)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Transaction from './Transaction/Transaction'\r\nimport * as actions from '../../store/actions/index'\r\nimport classes from './TransactionsDisplay.css'\r\n\r\nclass TransactionsDisplay extends Component {\r\n\r\n    removeTransHandler = (id) => {\r\n        this.props.onRemove(id)\r\n    }\r\n\r\n    render() {\r\n        const transactions = [...this.props.transactions]\r\n            .map((tr, id) => (\r\n                <Transaction\r\n                    key={tr.name + tr.amount + tr.rate}\r\n                    name={tr.name}\r\n                    amount={tr.amount}\r\n                    pln={tr.pln}\r\n                    clicked={() => this.removeTransHandler(id)}\r\n                />\r\n            ))\r\n        return (\r\n            <div className={classes.TransDisplayHeader}>\r\n                <h3>Your transactions:</h3>\r\n                {transactions}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        transactions: state.transactions\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRemove: (id) => dispatch(actions.removeTransaction(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsDisplay)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Transaction from '../TransactionsDisplay/Transaction/Transaction'\r\nimport classes from './LargestAmount.css'\r\n\r\nclass LargestAmount extends Component {\r\n    render() {\r\n        const sortedTrans = [...this.props.transactions].sort((a, b) => {\r\n            return b.amount - a.amount\r\n        })\r\n        const largeTrans = sortedTrans[0]\r\n\r\n        let transaction = null\r\n\r\n        if (sortedTrans.length) {\r\n            transaction = (\r\n                <Transaction\r\n                    name={largeTrans.name}\r\n                    amount={largeTrans.amount}\r\n                    pln={largeTrans.pln}\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <div className={classes.LargestAmountHeader}>\r\n                <h3>Largest transaction:</h3>\r\n                {transaction}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        transactions: state.transactions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LargestAmount)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport classes from './Summary.css'\r\n\r\nclass Summary extends Component {\r\n\r\n    render() {\r\n        const numbOfTrans = this.props.transactions.length\r\n        const eurAmount = this.props.transactions.map(tr => {\r\n            return Number(tr.amount)\r\n        })\r\n        const totalEur = eurAmount.reduce((acc, cur) => {\r\n            return acc + cur\r\n        }, 0)\r\n        const plnAmount = this.props.transactions.map(tr => {\r\n            return Number(tr.pln)\r\n        })\r\n        const totalPln = plnAmount.reduce((acc, cur) => {\r\n            return acc + cur\r\n        }, 0)\r\n\r\n\r\n        return (\r\n            <div className={classes.Summary}>\r\n                <span>No. of transactions\r\n                    <strong>{numbOfTrans}</strong>\r\n                </span>\r\n                <span>Total amount EUR\r\n                    <strong>{Number(totalEur).toLocaleString('pl-PL', { maximumFractionDigits: 2 })}</strong>\r\n                </span>\r\n                <span>Total amount PLN\r\n                    <strong>{Number(totalPln).toLocaleString('pl-PL', { maximumFractionDigits: 2 })}</strong>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        transactions: state.transactions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Summary)","import React from 'react';\n\nimport RateInput from './components/RateInput/RateInput'\nimport NewTransaction from './components/NewTransaction/NewTransaction'\nimport classes from './App.css'\nimport TransactionsDisplay from './components/TransactionsDisplay/TransactionsDisplay';\nimport LargestAmount from './components/LargestAmount/LargestAmount';\nimport Summary from './components/Summary/Summary';\n\nfunction App() {\n  return (\n    <div>\n      <header className={classes.Header}>\n        <NewTransaction />\n        <RateInput />\n      </header>\n      <main className={classes.Transactions}>\n        <TransactionsDisplay />\n        <LargestAmount />\n      </main>\n      <footer className={classes.Summary}>\n        <Summary />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","export const updateObject = (oldObject, updatedObject) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedObject\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialState = {\r\n    rate: null,\r\n    transaction: {\r\n        name: null,\r\n        amount: null,\r\n        pln: null\r\n    },\r\n    transactions: []\r\n}\r\n\r\nconst addRate = (state, action) => {\r\n    return updateObject(state, {\r\n        rate: action.rate\r\n    })\r\n}\r\n\r\nconst addTransaction = (state, action) => {\r\n    const newTransaction = updateObject(action.transaction, {\r\n        pln: (action.transaction.amount * state.rate).toFixed(2)\r\n    })\r\n    return updateObject(state, {\r\n        transaction: newTransaction,\r\n        transactions: state.transactions.concat(newTransaction)\r\n    })\r\n\r\n}\r\n\r\n\r\nconst removeTransaction = (state, action) => {\r\n    const transactions = [...state.transactions]\r\n    transactions.splice(action.id, 1)\r\n    return updateObject(state, {\r\n        transactions: transactions\r\n    })\r\n}\r\n\r\nconst recalcTransaction = (state, action) => {\r\n    const updatedTransactions = state.transactions.map(tr => {\r\n        return updateObject(tr, {\r\n            pln: (tr.amount * action.rate).toFixed(2)\r\n        })\r\n    })\r\n    return updateObject(state, {\r\n        transactions: updatedTransactions\r\n    })\r\n\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_RATE: return addRate(state, action)\r\n        case actionTypes.ADD_TRANSACTION: return addTransaction(state, action)\r\n        case actionTypes.DEL_TRANSACTION: return removeTransaction(state, action)\r\n        case actionTypes.RECALC_TRANSACTION: return recalcTransaction(state, action)\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\nimport reducer from './store/reducers/transactions'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(thunk)\n))\n\nconst app = (\n    <Provider store={store} >\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}